@import url('https://fonts.googleapis.com/css?family=Ubuntu+Mono:700');
@import url('https://fonts.googleapis.com/css?family=Roboto+Condensed:400,700');

/* TODO remove confirm-deletion-alert */

* {
  margin: 0;
  padding: 0;
	overflow: hidden;

  font-family: 'Roboto Condensed', "Roboto", "Ubuntu", "Cantarell", sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

body, #main, #overlay, #node-graph, #connection-graph, #example-text, #confirm-deletion-alert {
	position: fixed;
	top:0; left:0;
	width: 100vw;
	height: 100vh;
	overflow: hidden;
}

.button, #node-graph :not(input) {
  user-select: none; /* wont work for double click */
}
.button {
  cursor: pointer;
}

.button::selection, #node-graph :not(input)::selection {
  color: inherit;
	background: transparent; /* user-select:none wont work for double click */
}


.transform-wrapper {
	position: absolute;
	display: block;

	top: 0; left: 0;
	overflow: visible;
} 

#example-text {
  font-size: 1.2em;

  overflow: hidden;
  box-sizing: border-box;
  padding: 70px 12px 12px 12px;
  text-align: justify;
  resize: none;
  white-space: pre-line; /* required for align:justify in a textarea */

	user-select: auto;
	pointer-events: all;
}

.editing-example-text #example-text {
}

.editing-example-text #connection-graph, .editing-example-text #node-graph {
  display: none;
}

#overlay {
	pointer-events: none;
}
#overlay > * {
  pointer-events: all;
}

#overlay {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: stretch;
}

nav {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: stretch;
}

header {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: baseline;

  padding: 8px;
  height: 42px;
}
header h1 {
  font-size: 24px;
  font-weight: normal;
  display: inline;
  margin-left: 16px;
}
header a {
  margin-left: 12px;
  font-size: 18px;
}
header a, header h1 {
  transform: translate(0px, -10px);
}
header img {
  display: inline-block;
  height: 100%;
}

#example-options {
  display: flex;
  flex-direction: row;
  justify-content: flex-end;
  align-items: center;
}

#match-limit {
  opacity: 0;
  pointer-events: none;
}

#match-limit input {
  width: 70px;
  padding: 4px;
  margin: 0 20px 0 20px;
}

.editing-example-text #match-limit {
  opacity: 1;
  pointer-events: all;
}

#edit-example {
  padding: 20px;
}

#search {
  position: fixed;
  top: 8px;
  left: 33vw;
  width: 33vw;

  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: stretch;
}
#history {
  position: fixed;
  top: 8px;
  left: 66vw;
  height: 44px;

  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: center;
}
#history .button {
  padding: 8px;
}
#history .disabled.button {
  opacity: 0.2;
  pointer-events: none;
}
#history .button:hover {
  background-color: #444;
}
#history img {
  height: 20px;
}
#history #redo img {
  transform: scale(-1, 1);
}

#search input {
  font-size: 18px;
  padding: 8px;
  box-sizing: border-box;
}

#search #results {
  max-height: 80vh;
  overflow-x: hidden;
  overflow-y: auto;
}

#search #results > * {
  font-size: 18px;
  padding: 6px;
}

#expression-result {
  display: flex;
  flex-direction: row;
  align-items: stretch;
  max-height: 40vh;
  overflow-y: auto;

  font-size: 28px;
}

.no#expression-result {
  visibility: hidden;
}

#expression-result code {
  overflow-y: auto;
  text-align: center;
  flex-grow: 1;
  padding: 12px;
}

#expression-result #lock {
  height 100%;
}

#lock svg {
  padding: 0 32px;
  height: 100%;
  transform: scale(0.5);
}

.alert {
  position: absolute;
  top:0; left:0;
  width: 100vw; height: 100vh;

  display: flex;
  visibility: hidden;
}

.show.alert {
  visibility: visible;
}

.dialog-box {
  margin: 25vh auto auto auto;
  font-size: 1.4em;

  display: flex;
  flex-direction: column;
  align-items: stretch;
  text-align: center;
}
.dialog-box p {
  padding: 18px;
}
.dialog-box .options {
  display: flex;
  flex-direction: row;
  align-items: stretch;
}
.dialog-box .button {
  padding: 12px;
  width: 50%;
}
.notification {
  position: absolute;
  bottom: 80px;
  right: 40px;
  visibility: hidden;
  padding: 12px;
}
.show.notification {
  visibility: visible;
}

.graph-node {
	position: absolute;
	top:0; left:0;
	font-size: 14px;

	overflow: visible; /* display the menu */
}

.graph-node .properties {
	display: flex;
	flex-direction: column;
	align-items: stretch;
	align-content: stretch;
}

.graph-node .menu {
  position: absolute;
  right: 0; top: 0;
  height: 0;

  display: flex;
  flex-direction: row;
}
#main:not(.connect-dragging) .selected.graph-node .menu {
  top: -25px;
  height: 25px;
}
.graph-node .menu .button, .menu .button img {
  height: 100%;
}
.menu .button img {
  margin: 0; padding: 0;
  transform: scale(0.8);
  height: 100%;
}

.property {
	height: 25px;
	display: flex;
	flex-direction: row;
	align-items: center;
	align-content: stretch;
	justify-content: space-between;
}

/* align input items to the left by filling space with the name */
.property > .title {
	text-align: left;
	margin-right: 6px;
	flex-grow: 1;
}

/*.property.main*/ .property:first-child > .title {
	text-align: center;
	font-weight: 700;
}

/* override priority, maximise text input size */
.property > .chars.input, .property > .int.input {
	flex-grow: 100;
}

/* override priority, maximise text input size */
.property > .chars.input, .property > .int.input, .property > .char.input {
	text-align: center;
}


.property input {
  padding: 2px;
	font-size: 0.7em;
	width: 10px;
}

.connector {
	width: 4px;
	height: 100%;
}

.left.connector {
	margin-right: 6px;
}

.right.connector {
	margin-left: 6px;
}

.inactive.connector {
	opacity: 0;
}

.connect-dragging .property:not(.connectable-input) {
	pointer-events: none;
}


.connection {
	stroke-linecap: round;
	stroke-width: 3;
	fill: none;
}
