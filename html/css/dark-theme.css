@import url('https://fonts.googleapis.com/css?family=Ubuntu+Mono:700');
@import url('https://fonts.googleapis.com/css?family=Roboto+Condensed:400,700');


* {
  font-family: 'Roboto Condensed', "Roboto", "Ubuntu", "Cantarell", sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

*::selection {
	background: teal;
	color: #fff;
}



/* FIXME will not work when removing parent classes! */
.property, .graph-node, .connector, #search > input, #match-limit, #match-limit input,
.property > .chars.input,.property > .int.input, #edit-example-container
{
  transition: background-color 250ms, opacity 100ms;
}

.property .chars.input, .property .int.input {
  transition: border-color 150ms;
}

.property, nav a, #example-text {
  transition: color 150ms;
}




code, #search #results #parse-regex {
  font-family: 'Ubuntu Mono', source-code-pro, Consolas, monospace;
}

textarea:focus, input:focus {
  outline: none;
}

body {
	caret-color: teal;
  background-color: #222;
  color: #ddd;
}

header a {
  color: #555;
  text-decoration: none;
}
header a:hover {
  color: #666;
}
nav {
  background-color: #333;
}

#search, #search input {
  text-align: center;
}
#search #results {
  background-color: #444;
  color: #bbb;
}
#search #results > *:hover {
  background-color: #555;
  color: #ddd;
}
#search input, #match-limit input {
  background: #444;
  border: 2px solid #444;
  color: #fff;
}
#search input:focus, #match-limit input:focus {
  background: transparent;
  border: 2px solid #444;
}
#search #results #parse-regex {
  color: teal;
}

#expression-result {
  background: #1b1b1b;
}
#expression-result #declaration {
  color: #666;
  font: inherit;
}
#expression-result #lock {
  color: #666;
}
#expression-result #lock:hover {
  background-color: #242424;
}
#expression-result #lock.checked {
  background-color: #111;
  color: #ddd;
}

#match-limit  {
  color: #999;
}

#edit-example {
  color: #999;
}
#edit-example:hover {
  background-color: #393939;
}
.editing-example-text #edit-example {
  background-color: #222;
  color: #ddd;
}


#example-text {
  /*animation: enterEditableText 0.2s forwards reverse; FIXME would flash on page load */
  color: #444;
	opacity: 0.7; /* avoid too bright text highlighting */
}
#example-text .match {
	color: #777;
}
.editing-example-text #example-text {
  animation: enterEditableText 0.2s forwards;

  border: none; /* reset textarea styling */
	background: transparent;
}

/* on-spawn animation is started when example text area is swapped with div */
@keyframes enterEditableText {
  from { color: #444; }
  to   { color: #888; }
}

.connection {
	stroke: teal;
}


.graph-node {
	background-color: #eee;
	box-shadow: 2px 2px 0 0 #00000044;
}
.graph-node {
	cursor: pointer;
}
.output.graph-node {
  color: teal;
}
.move-dragging * {
	cursor: grabbing;
}
.connect-dragging * {
	cursor: pointer;
}


.property:hover {
	background-color: #fff;
}
.connect-dragging .property:hover {
	background-color: #eeeeee22;
}

.property .chars.input, .property .int.input {
	border: 1px solid transparent;
	background-color: #22222222;
	font-family: 'Ubuntu Mono', source-code-pro, Menlo, Monaco, Consolas, "Courier New", monospace;
}
.property .chars.input:focus, .property .int.input:focus {
	border: 1px solid #333;
	background-color: transparent;
}

.connector {
	background-color: teal;
}
.inactive.connector {
	opacity: 0;
}

.graph-node {
	color: #333;
}
.graph-node input {
	color: inherit;
}

.connect-dragging .graph-node:not(.connecting) .property.connectable-input {
	background-color: #ddd;
}
.connect-dragging .graph-node {
	background-color: #444;
}

.connect-dragging .property:not(.connectable-input) {
	opacity: 0.25;
	color: #fff;
}
.connect-dragging .property:first-child:not(.connectable-input) {
	opacity: 0.6;
}

.connecting.graph-node .property:first-child {
	animation: flashToTealBackground 1s ease-out forwards;
	background-image: url("../img/energy-background.svg");
	background-repeat: no-repeat;
	background-position: 0% 0%; 
	background-size: 100% 100%;
	opacity: 1;
	color: #fff;
}

.connect-dragging .connector {
	background-color: #555;
}
.connect-dragging .connectable-input.property .connector {
	background-color: transparent;
}
.connect-dragging .graph-node:not(.connecting) .connectable-input.property .left.connector {
	background-color: teal;
}

.connecting.graph-node .property:first-child .connector {
	opacity: 0;
}

.connect-dragging .connection:not(.prototype) {
	stroke: #555;
}
.connect-dragging .prototype.connection {
	animation: fromSolidToDash 2s ease-out forwards;
}
:not(.connect-dragging) .connection:not(.prototype) {
	animation: fromDashToSolid 2s ease-in-out forwards;
}

.may-drag-connect .property:hover {
  background-color: teal;
	animation: flashToTealBackground 0.3s ease-out forwards;
  color: #ffffff77;
}
.may-drag-connect .property:hover .connector {
  background-color: #ffffff44;
}




@keyframes flashToTealBackground {
  from {
    background-color: #4FC195;
  }
  to {
    background-color: teal;
  }
}

/*@keyframes fromDashToSolid {
  0% {
    stroke-dasharray: 9;
    stroke: #4FC195;
  }
  99.99% {
    stroke-dasharray: 3;
  }
  100% {
    stroke-dasharray: 0;
    stroke: teal;
  }
}*/
@keyframes fromSolidToDash {
  0% {
    /*stroke-dasharray: 0;*/
    stroke: #4FC195;
  }
  /*0.001% {
    stroke-dasharray: 3;
  }*/
  100%  {
    /*stroke-dasharray: 9;*/
    stroke: teal;
  }
}